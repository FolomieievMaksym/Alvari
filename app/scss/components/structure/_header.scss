.header {
   &.home {
      background-color: transparent;
      li {
         color: $light;
         &.active {
            a {
               opacity: 0.75;
            }
         }
      }
      .burger__wrapper {
         span,
         &:after,
         &:before {
            background-color: $light;
         }
      }
   }
   background-color: $light;
   position: fixed;
   z-index: 11;
   width: 100%;
   opacity: 1;
   transition: opacity 0.3s ease 0s, background-color 0.3s ease 0s;
   &:hover {
      opacity: 1 !important;
   }
   &:before {
      // Накрывает менюшки с position: fixed
      // content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: $light; // todo Изменить на нужный цвет подложки
      z-index: 1;
   }
   &:after {
      content: "";
      position: absolute;
      z-index: 1;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 2px;
      background: $green;
   }
   &__container {
      @extend %container;
      padding-top: 18px;
      @media (min-width: 769px) {
         padding-bottom: 18px;
      }
   }
   &__body {
      min-height: 50px; // todo Указываем минимальную высоту шапки
      @media (max-width: 768px) {
         display: grid;
         grid-template-columns: auto 1fr;
         column-gap: 20px;
      }
      @media (min-width: 769px) {
         display: flex;
         align-items: center;
         justify-content: space-between; // todo Позиционируем элементы по оси Х
         column-gap: 20px;
      }
   }
   &__logo {
      @media (max-width: 768px) {
         grid-column: 1/2;
         grid-row: 1/2;
      }
      max-width: 91px;
      z-index: 2;
      img {
         max-width: 100%;
      }
      transition: all 0.3s ease;
      &:hover {
         transform: scale(1.1);
      }
   }
}

.header-action {
   @media (max-width: 768px) {
      margin-top: 18px;
      grid-column: 1/3;
      grid-row: 2/3;
      height: 0; // ! Либо писать в стилях - либо есть готовая функция в джсе (но лучше стилях)
      overflow: hidden; // ! Либо писать в стилях - либо есть готовая функция в джсе (но лучше стилях)
      transition: all 0.5s ease; // ! Либо писать в стилях - либо есть готовая функция в джсе (но лучше стилях)
   }
   &__list {
      @media (min-width: 769px) {
         flex: 1 1 auto; //Растягиваем на всю возможную ширину
         // max-width: 150px; // Задаем максимальную ширину (брать ширину меню из макета)
         position: relative;
         z-index: 2;
         display: flex;
         flex-wrap: wrap;
         align-items: center;
         justify-content: flex-end; // Раздвигаем элементы меню между собой для резинового увеличения отступа
         column-gap: 32px; // минимальный отступ между элементами меню
      }
   }
   li {
      cursor: pointer;
      color: $dark;
      transition: color 0.3s ease;
      &:hover,
      &.active {
         a {
            opacity: 0.5;
         }
      }
      a {
         padding-top: 9px;
         padding-bottom: 9px;
         @include fl(12);
         font-family: $ff2;
         font-weight: 600;
         letter-spacing: 0.6px;
         @media (max-width: 768px) {
            text-transform: uppercase;
            display: flex;
            justify-content: space-between;
            align-items: center;
            width: 100%;
            column-gap: 8px;
            span {
               display: flex;
               justify-content: center;
               align-items: center;
               width: 9px;
            }
            svg {
               max-width: 100%;
               height: auto;
            }
         }
         @media (min-width: 769px) {
            span {
               display: none;
            }
         }
      }
   }
}

.burger {
   position: relative;
   z-index: 2;
   min-height: 40px; // Высота блока для удобства нажатия на иконку
   width: 40px; // Ширина блока для удобства нажатия на иконку
   // ? Двигаем на половину от разницы между width для .burger и width для .burger__wrapper что бы .burger прилип к контейнеру
   margin-right: -10px;
   // ? Двигаем на половину от разницы между width для .burger и width для .burger__wrapper что бы .burger прилип к контейнеру
   display: flex;
   align-items: center;
   justify-content: center;
   transition: all 0.3s ease;
   cursor: pointer;
   &:hover {
      transform: scale(1.2);
   }
   @media (max-width: 768px) {
      grid-column: 2/3;
      grid-row: 1/2;
      justify-self: end;
   }
   @media (min-width: 769px) {
      display: none;
   }
   // todo Если нужно изменить цвет бургера при наведении
   /* 
   &:hover .burger__wrapper {
      span,
      &:before,
      &:after {
         background-color: orange; 
      }
   }
	*/
   &__wrapper {
      width: 20px; // todo Макетная ширина бургера
      height: 12px; // todo Макетная высота бургера
      position: relative;
      display: flex;
      flex-direction: column;
      span,
      &:before,
      &:after {
         width: 100%;
         height: 2px;
         background-color: $dark;
         transition: all 0.3s ease;
         transform: translateY(0);
         position: relative;
         left: 0;
         border-radius: 5px;
      }
      &:before {
         content: "";
         animation: burgerTopDisabled 0.7s ease 0s 1;
         animation-fill-mode: forwards;
      }
      &:after {
         content: "";
         animation: burgerBottomDisabled 0.7s ease 0s 1;
         animation-fill-mode: forwards;
      }
      span {
         top: 50%;
         transform: translateY(-150%);
         // transition: background-color 0.3s ease, transform 0.3s ease 0.35s; //! Interesting effect (on desktop)
         transition: background-color 0.3s ease, transform 0.3s ease 0s;
      }

      @keyframes burgerTopDisabled {
         // Closing burger animation
         0% {
            top: 50%;
            transform: translateY(-50%) rotate(-45deg);
         }
         50% {
            top: 50%;
            transform: translateY(-50%);
         }
         100% {
            top: 0;
            transform: translateY(0);
         }
      }
      @keyframes burgerBottomDisabled {
         // Closing burger animation
         0% {
            top: 50%;
            transform: translateY(-250%) rotate(45deg);
         }
         50% {
            top: 50%;
            transform: translateY(-250%);
         }
         100% {
            top: 100%;
            transform: translateY(-300%);
         }
      }
   }
   &.active {
      // Opening burger animation
      .burger__wrapper {
         &:before {
            animation: burgerTopActive 0.7s ease 0s 1;
            animation-fill-mode: forwards;
         }
         span {
            transform: translateY(-150%) scale(0);
            // transition: background-color 0.3s ease, transform 0.3s ease 0s; //! Interesting effect (on desktop)
            transition: background-color 0.3s ease, transform 0.3s ease 0.3s;
         }
         &:after {
            animation: burgerBottomActive 0.7s ease 0s 1;
            animation-fill-mode: forwards;
         }
         @keyframes burgerTopActive {
            0% {
               top: 0;
               transform: translateY(0);
            }
            50% {
               top: 50%;
               transform: translateY(-50%);
            }
            100% {
               top: 50%;
               transform: translateY(-50%) rotate(-45deg);
            }
         }
         @keyframes burgerBottomActive {
            0% {
               top: 100%;
               transform: translateY(-300%);
            }
            50% {
               top: 50%;
               transform: translateY(-250%);
            }
            100% {
               top: 50%;
               transform: translateY(-250%) rotate(45deg);
            }
         }
      }
   }
}
#arrow-top {
   transition: opacity 0.3s ease;
   opacity: 0;
   position: fixed;
   z-index: 11;
   right: 22px;
   bottom: 60px;
   span {
      box-shadow: 0 0 3px $dark;
      background-color: $dark;
      width: 42px;
      height: 42px;
      border-radius: 3px;
      display: flex;
      justify-content: center;
      align-items: center;
      opacity: 0.5;
      transition: all 0.3s ease;
      &:hover {
         opacity: 1;
      }
      svg {
         width: 15px;
         height: 15px;
      }
      path {
         fill: $light;
      }
   }
}
